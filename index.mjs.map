{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar incrpcorr = require( '@stdlib/stats-incr-pcorr' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a squared sample Pearson product-moment correlation coefficient.\n*\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrpcorr2();\n*\n* var r2 = accumulator();\n* // returns null\n*\n* r2 = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r2 = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* r2 = accumulator();\n* // returns ~1.0\n*\n* @example\n* var accumulator = incrpcorr2( 2.0, -3.0 );\n*/\nfunction incrpcorr2( meanx, meany ) {\n\tvar acc;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( '0eg4M', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( '0eg4N', meany ) );\n\t\t}\n\t\tacc = incrpcorr( meanx, meany );\n\t} else {\n\t\tacc = incrpcorr();\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated accumulated value. If not provided input values, the accumulator function returns the current accumulate value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} squared sample correlation coefficient or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = acc();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn r * r;\n\t\t}\n\t\tr = acc( x, y );\n\t\treturn r * r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorr2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a squared sample Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats-incr-pcorr2\n*\n* @example\n* var incrpcorr2 = require( '@stdlib/stats-incr-pcorr2' );\n*\n* var accumulator = incrpcorr2();\n*\n* var r2 = accumulator();\n* // returns null\n*\n* r2 = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r2 = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* r2 = accumulator();\n* // returns ~1.0\n*/\n\n// MODULES //\n\nvar incrpcorr2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorr2;\n"],"names":["isNumber","require$$0","isPrimitive","incrpcorr","require$$1","format","require$$2","lib","meanx","meany","acc","arguments","length","TypeError","accumulator","x","y","r"],"mappings":";;kQAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAAYC,EACZC,EAASC,EAwEb,IC9CAC,EDMA,SAAqBC,EAAOC,GAC3B,IAAIC,EACJ,GAAKC,UAAUC,OAAS,CACvB,IAAMZ,EAAUQ,GACf,MAAM,IAAIK,UAAWR,EAAQ,QAASG,IAEvC,IAAMR,EAAUS,GACf,MAAM,IAAII,UAAWR,EAAQ,QAASI,IAEvCC,EAAMP,EAAWK,EAAOC,QAExBC,EAAMP,IAEP,OAAOW,EAUP,SAASA,EAAaC,EAAGC,GACxB,IAAIC,EACJ,OAA0B,IAArBN,UAAUC,OAEH,QADXK,EAAIP,KAEIO,EAEDA,EAAIA,GAEZA,EAAIP,EAAKK,EAAGC,IACDC"}